{
  "id": "1",
  "title": "Introduction in C",
  "content": "In the early 1970s, within the walls of Bell Labs, the C language was born—a creation by Dennis Ritchie that would forever change the landscape of programming. Initially designed for developing UNIX, it quickly expanded beyond operating systems to become a universal tool. The year 1978 was marked by the release of the iconic book by Kernighan and Ritchie.The C Programming Language. This work, known as K&R, became the bible for generations of programmers, establishing the language's first canonical rules. By the late 1980s, C gained official status: first as ANSI C (1989), and then as the international ISO C standard (1990). These standards solidified its foundations, ensuring code portability and reliability. At the turn of the millennium, C99 emerged—a standard that brought revolutionary changes: variable-length arrays, a boolean type, complex numbers, and inline functions. The language became more powerful and expressive. In 2011, C entered the modern era with the C11 standard, which added support for multithreading, improved Unicode handling, and new safety features. The modern chapter in the language's development—C18 (2017)—focuses on refinement: eliminating inconsistencies, improving stability, and paving the way for future innovations. Today, C continues to be the foundation upon which operating systems, compilers, embedded systems, and countless applications are built. Its DNA is visible in most modern languages, and its principles and philosophy continue to influence new generations of developers.",
  "isCompleted": true,
  "practice": null
}